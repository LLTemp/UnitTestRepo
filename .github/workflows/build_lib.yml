name: SIC iOS SDK

on:
  push:
    branches: [ master ]
    paths:
      - 'UnitTestWithPod/**'
      - '.github/**'
  pull_request:
    branches: [ master ]
    paths:
      - 'UnitTestWithPod/**'
      - '.github/**'

defaults:
  run:
    working-directory: ./UnitTestWithPod

jobs:
  build:

    runs-on: macos-10.15

    steps:
    - uses: actions/checkout@v2

    # TODO Cache dependencies
    - name: pod_install_lib
      run: pod install --clean-install

    - name: xcodebuild version
      run: /usr/bin/xcodebuild -version

#    - name: test_sdk
#      run: xcodebuild test -workspace ./UnitTestWithPod.xcworkspace -scheme UnitTestWithPodTests ONLY_ACTIVE_ARCH=YES CODE_SIGN_REQUIRE=NO -destination "platform=iOS Simulator,OS=14.0,name=iPhone 8"
#
#    - name: Archive test report
#      if: ${{ always() }}
#      uses: actions/upload-artifact@v2
#      with:
#        name: Coverage
#        path: /Users/runner/Library/Developer/Xcode/DerivedData/UnitTestWithPod-fznsrnskqxpbyodcpeiavrncgppz/Logs/Test/*.xcresult

    - name: Create framework
      if: ${{ github.event_name == 'push' }}
      run: xcodebuild -workspace ./UnitTestWithPod.xcworkspace -scheme Universal ONLY_ACTIVE_ARCH=YES CODE_SIGN_REQUIRE=NO

    - name: zip_sdk
      if: ${{ github.event_name == 'push' }}
      run: zip -r ./UnitTestWithPod.framework.zip ./UnitTestWithPod.framework

    - name: LS1
      if: ${{ always() }}
      run: ls -la

    - name: Save framework ZIP
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: UnitTestWithPod.framework.zip
        path: UnitTestWithPod/UnitTestWithPod.framework.zip

#    - name: Save framework
#      if: ${{ always() }}
#      uses: actions/upload-artifact@v2
#      with:
#        name: UnitTestWithPod.framework
#        path: UnitTestWithPod/UnitTestWithPod.framework/*

#    - name: Save builddir
#      if: ${{ always() }}
#      uses: actions/upload-artifact@v2
#      with:
#        name: build
#        path: UnitTestWithPod/build/*

    - name: LS
      if: ${{ always() }}
      run: ls -la

    - name: Upload
      if: ${{ github.event_name == 'push' }}
      env:
        push_token: ${{ secrets.PUSH_TOKEN }}
      run: ./upload.sh
